// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  habits Habit[]
  tasks Task[]
}

model Habit {
  id    Int    @id @default(autoincrement())
  title String
  goal  Int
  createdAt DateTime @default(now())
  archived Boolean
  userId Int?
  user User?    @relation(fields: [userId], references: [id])
  logs HabitLog[] @relation("HabitLogs")
}

model HabitLog {
  id Int @id @default(autoincrement())
  date DateTime
  habitId Int
  habit Habit @relation("HabitLogs", fields: [habitId], references: [id], onDelete: Cascade)
}

enum TaskStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
  REMINDER
}

model Task {
  id Int @id @default(autoincrement())
  title String
  description String?
  deadline DateTime?
  createdAt DateTime @default(now())
  status TaskStatus
  completed Boolean
  userId Int?
  user User? @relation(fields: [userId], references: [id])
  checklist Checklist[] @relation("Task_Checklist") // Optional?
}

model Checklist {
  id Int @id @default(autoincrement())
  title String
  description String?
  deadline DateTime?
  completed Boolean
  createdAt DateTime @default(now())
  taskId Int
  task Task @relation("Task_Checklist", fields: [taskId], references: [id], onDelete: Cascade)
}

model Setting {
  id Int @id @default(autoincrement())
  botMessageHour Int @default(21)
  botMessageMinute Int @default(0)
  monthlyReportHour Int @default(23)
  monthlyReportMinute Int @default(0)
}
